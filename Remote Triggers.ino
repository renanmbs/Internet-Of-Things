/*
  Sketch generated by the Arduino IoT Cloud Thing "Explore_IoT_Activity_4"
  https://create.arduino.cc/cloud/things/eab15d7a-ea60-458b-8b08-f388e841e8ed

  Arduino IoT Cloud Properties description

  The following variables are automatically generated and updated when changes are made to the Thing

  String message;
  float accelerometer_x;
  float accelerometer_y;
  float accelerometer_z;
  CloudColoredLight rgb;
  int countries;
  int different_team;
  int led_wanted;
  int screenColor;
  int soundDuration;
  int soundFrequency;
  int textSize;
  CloudLocation capital;
  CloudLocation location;
  bool moving;
  bool soundOn;
  bool warningAlarm;

  Properties which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

/*
  Name: Renan Mougenot Breviglieri Silva
  Date: January 13th, 2022
  Title: Remote Triggers "improved"
*/

/*TASK 1 CODE WAS MODIFIED BY ME TO DO EXTRA THINGS*/


//Import Libraries
#include "thingProperties.h"
#include <Arduino_MKRIoTCarrier.h>
#include "arduino_secrets.h"

//Initialize carrier
MKRIoTCarrier carrier;

//Global Parameters
int red = 0; //Hold int for red int (0-255)
int green = 0; //Hold int for green int (0-255)
int blue = 0; //Hold int for blue int (0-255)
float threshold  = 1.8; //Threshold for moving
uint8_t r, g, b; //Ints for the colored switch
uint32_t off = carrier.leds.Color(0, 0, 0); //Int to turn off the LEDs
uint32_t red_leds = carrier.leds.Color(0, 200, 0); //Int to turn the LEDs red

void setup() {

  Serial.begin(9600); //Set baud rate

  initProperties(); //Initialize Properties

  ArduinoCloud.begin(ArduinoIoTPreferredConnection); //Initialize Cloud

  //Carrier
  CARRIER_CASE = false; //No case
  carrier.begin(); //Begin carrier

  //Debug cloud if failed
  setDebugMessageLevel(4);   //Get Cloud Info/errors , 0 (only errors) up to 4
  ArduinoCloud.printDebugInfo();

  //While not connected
  while (ArduinoCloud.connected() != 1) {
    ArduinoCloud.update();
    carrier.display.setTextSize(3);
    carrier.display.setCursor(20, 70);
    carrier.display.println("Waiting For");
    carrier.display.setCursor(5, 110);
    carrier.display.println("Connection...");
    delay(500);
  }

  //Initialize with black screen and color
  carrier.display.fillScreen(ST77XX_BLACK); //Black background
  carrier.display.setTextColor(ST77XX_BLACK); //Black text

}

void loop() {

  //Set location map (Lat, Long)
  location = Location(41.107219, -111.764614);

  //Update cloud
  ArduinoCloud.update();

  //Location map
  Location coordinates = location.getValue();

  //Warning alarm is on
  if (warningAlarm == true) {
    alarm(); //Alarm function
  }

  carrier.display.setCursor(50, 100); //Cursor

  //If sound is on
  if (soundOn == true) {

    carrier.Buzzer.sound(soundFrequency); //Frequency chosen and start sound
    delay(soundDuration); //Play sound for this long
    carrier.Buzzer.noSound(); //Turn off sound
    delay(soundDuration); //Delay

  }

  //Read acceleration
  carrier.IMUmodule.readAcceleration(accelerometer_x, accelerometer_y, accelerometer_z);

  //If moving is on
  if (moving){
    acceleration_check(); //Call Acceleration function
  }

  //If is not on
  else if (moving == false){
    carrier.Buzzer.noSound();  //No sound
    carrier.leds.fill(off); //No LED on
    carrier.leds.show();
    carrier.display.fillScreen(ST77XX_BLACK); //Black background
    carrier.display.setTextColor(ST77XX_BLACK); //Black text
  }

}

//Function to check acceleration
void acceleration_check(){

  //Sum for calculation
  float sum = 0;
  sum = abs(accelerometer_x + accelerometer_y + accelerometer_z); //Set sum

  //If sum is bigger than threshold
  if(sum > threshold){

    carrier.display.fillScreen(ST77XX_RED); //Red background
    carrier.display.setTextColor(ST77XX_WHITE); //White text
    message  = "Stop Moving me"; //Send message to cloud
    carrier.display.setTextSize(2); //Text size
    carrier.display.setCursor(0, 100); //Cursor
    carrier.display.print("Stop Moving Me!"); //Display message
    carrier.Buzzer.sound(400); //Turn on sound
    carrier.leds.fill(red_leds); //LEDs Red
    carrier.leds.show(); //Turn on leds
  }

  //If it is not bigger
  else{
    carrier.Buzzer.noSound();  //No sound
    carrier.leds.fill(off); //No LED on
    carrier.leds.show();
    carrier.display.fillScreen(ST77XX_BLACK); //Black background
    carrier.display.setTextColor(ST77XX_BLACK); //Black text
  }
}


//Function for alarm
void alarm() {
  carrier.display.fillScreen(ST77XX_RED); //Red background
  carrier.display.setTextColor(ST77XX_WHITE); //White text
  carrier.display.setTextSize(3); //Size
  carrier.display.setCursor(50, 100); //Cursor
  carrier.display.print("WARNING!"); //Display message
  carrier.Buzzer.sound(1000); //Turn on sound

  delay(1000); //Play for 1 second

  carrier.display.fillScreen(ST77XX_WHITE); //White background
  carrier.display.setTextColor(ST77XX_RED); //Red text
  carrier.display.setCursor(50, 100); //Cursor
  carrier.display.print("WARNING!"); //Display message
  carrier.Buzzer.noSound();  //Turn off sound
  delay(1000); //Wait for 1 second

  carrier.display.fillScreen(ST77XX_WHITE); //White background
  carrier.display.setTextColor(ST77XX_WHITE); //White text

}

//Function to check the background color
void backgroundColor() {

  //Check value of screen color
  switch (screenColor) {
    //If it is 0
    case 0:
      carrier.display.fillScreen(ST77XX_BLACK); //Black background
      carrier.display.setTextColor(ST77XX_WHITE); //set the color of the text to WHITE
      break;

    //If it is 1
    case 1:
      carrier.display.fillScreen(ST77XX_RED);//Red background
      carrier.display.setTextColor(ST77XX_WHITE); //set the color of the text to WHITE
      break;

    //If it is 2
    case 2:
      carrier.display.fillScreen(ST77XX_YELLOW); //Yellow background
      carrier.display.setTextColor(ST77XX_BLACK); //set the color of the text to BLACK
      break;

    //If it is 3
    case 3:
      carrier.display.fillScreen(ST77XX_ORANGE); //Orange background
      carrier.display.setTextColor(ST77XX_WHITE); //set the color of the text to WHITE
      break;

    //If it is 4
    case 4:
      carrier.display.fillScreen(ST77XX_GREEN); //Green background
      carrier.display.setTextColor(ST77XX_BLACK); //set the color of the text to BLACK
      break;

    //If it is 5
    case 5:
      carrier.display.fillScreen(ST77XX_BLUE); //Blue background
      carrier.display.setTextColor(ST77XX_WHITE); //set the color of the text to WHITE
      break;

    //If it is 6
    case 6:
      carrier.display.fillScreen(ST77XX_MAGENTA); //Magenta background
      carrier.display.setTextColor(ST77XX_WHITE); //set the color of the text to WHITE
      break;
  }

}

//Function if there is a change in the message
void onMessageChange() {
  // Do something
  backgroundColor(); //Call background function
  carrier.display.setTextSize(textSize); //Set text size accordingly

}

//Function if there is a change in the screen color
void onScreenColorChange() {
  // Do something
  backgroundColor(); //Call background function
  carrier.display.setTextSize(textSize); //Set text size accordingly

}

//Function if there is a change in the text size
void onTextSizeChange() {
  // Do something
  backgroundColor(); //Call background function
  carrier.display.setTextSize(textSize); //Set text size accordingly
}

//Function if there is a change in the light colors
void onRgbChange() {

  //Read R,G,B values
  rgb.getValue().getRGB(r, g, b);

  //Check if it is on
  if (rgb.getSwitch()) {

    //Loop through LEDs
    for (int i = 0; i <= 4 ; i++) {
      carrier.leds.setPixelColor(i, g, r, b); //Set to wanted colors
    }

    carrier.leds.show();

  }
  //If it is off
  else {

    //Loop through LEDs
    for (int i = 0; i <= 4 ; i++) {
      carrier.leds.setPixelColor(i, 0); //No lights
    }

    carrier.leds.show();
  }
}

void onSoundDurationChange() {
  // Do something
}


void onSoundFrequencyChange() {
  // Do something
}

void onSoundOnChange() {
  // Do something
}

void onWarningAlarmChange() {
  // Do something
}

//Function to change the LEDs desired
void onLedWantedChange()  {
  //Check value of LED wanted
  switch (led_wanted) {

    //If it is 0
    case 0:
      carrier.leds.fill(off); //Turn off LEDs
      carrier.leds.show();
      break;

    //If it is 1
    case 1:
      //Assign random values
      red = random(255);
      green = random(255);
      blue = random(255)
      carrier.leds.setPixelColor(0, green, red, blue); //Set LEDs according to random values
      carrier.leds.show();
      break;

    //If it is 2
    case 2:
      //Assign random values
      red = random(255);
      green = random(255);
      blue = random(255);
      carrier.leds.setPixelColor(1, green, red, blue); //Set LEDs according to random values
      carrier.leds.show();
      break;

    //If it is 3
    case 3:
      //Assign random values
      red = random(255);
      green = random(255);
      blue = random(255);
      carrier.leds.setPixelColor(2,  green, red, blue); //Set LEDs according to random values
      carrier.leds.show();
      break;

    //If it is 4
    case 4:
      //Assign random values
      red = random(255);
      green = random(255);
      blue = random(255);
      carrier.leds.setPixelColor(3, green, red, blue); //Set LEDs according to random values
      carrier.leds.show();
      break;

    //If it is 5
    case 5:
      //Assign random values
      red = random(255);
      green = random(255);
      blue = random(255);
      carrier.leds.setPixelColor(4, green, red, blue); //Set LEDs according to random values
      carrier.leds.show();
      break;
  }
}

//Function to show PSG
void psg(){
  carrier.display.fillScreen(ST77XX_BLUE); //Blue background
  carrier.display.setTextColor(ST77XX_WHITE); //White text

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(0, 100); //Cursor
  carrier.display.print("Paris Saint-Germain!"); //Display message

  carrier.leds.setPixelColor(0, 37, 46, 178); //LED 0: g r b - blue
  carrier.leds.setPixelColor(1, 0, 200, 0); //LED 1: g r b - red
  carrier.leds.setPixelColor(2, 255, 255, 255); //LED 2: g r b - white
  carrier.leds.setPixelColor(3, 37, 46, 178); //LED 3: g r b - blue
  carrier.leds.setPixelColor(4, 0, 200, 0); //LED 4: g r b - red
  carrier.leds.show();
}

//Function to show Manchester United
void man_u(){
  carrier.display.fillScreen(ST77XX_RED); //Blue background
  carrier.display.setTextColor(ST77XX_YELLOW); //White text

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(0, 100); //Cursor
  carrier.display.print("Manchester United!"); //Display message

  carrier.leds.setPixelColor(0, 210, 232, 12); //LED 0: g r b - yellow
  carrier.leds.setPixelColor(1, 0, 200, 0); //LED 1: g r b - red
  carrier.leds.setPixelColor(2, 210, 232, 12); //LED 2: g r b - yellow
  carrier.leds.setPixelColor(3, 0, 200, 0); //LED 3: g r b - red
  carrier.leds.setPixelColor(4, 210, 232, 12); //LED 4: g r b - yellow
  carrier.leds.show();
}

//Function to show Athletico Paranaense
void athletico(){
  carrier.display.fillScreen(ST77XX_RED); //Blue background
  carrier.display.setTextColor(ST77XX_BLACK); //White text

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(0, 100); //Cursor
  carrier.display.print("Athletico Paranaense"); //Display message

  carrier.leds.setPixelColor(0, 0, 200, 0); //LED 0: g r b - red
  carrier.leds.setPixelColor(1, 0, 0, 0); //LED 1: g r b - no color
  carrier.leds.setPixelColor(2, 0, 200, 0); //LED 2: g r b - red
  carrier.leds.setPixelColor(3, 0, 0, 0); //LED 3: g r b - no color
  carrier.leds.setPixelColor(4, 0, 200, 0); //LED 3:  g r b - red
  carrier.leds.show();
}

//Function to show Internacional
void inter(){
  carrier.display.fillScreen(ST77XX_RED); //Blue background
  carrier.display.setTextColor(ST77XX_WHITE);  //White text

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(40, 100); //Cursor
  carrier.display.print("Internacional!"); //Display message


  carrier.leds.setPixelColor(0, 255, 255, 255); //LED 0: g r b - white
  carrier.leds.setPixelColor(1, 0, 200, 0); //LED 1: g r b - red
  carrier.leds.setPixelColor(2, 255, 255, 255); //LED 2: g r b - white
  carrier.leds.setPixelColor(3, 0, 200, 0); //LED 3: g r b - red
  carrier.leds.setPixelColor(4, 255, 255, 255); //LED 4: g r b - white
  carrier.leds.show();
}

//Function to show Al Hilal
void hilal(){
  carrier.display.fillScreen(ST77XX_BLUE); //Blue background
  carrier.display.setTextColor(ST77XX_WHITE); //White text

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(50, 100); //Cursor
  carrier.display.print("Al Hilal!"); //Display message

  carrier.leds.setPixelColor(0, 20, 20, 178); //LED 0: g r b - blue
  carrier.leds.setPixelColor(1, 255, 255, 255); //LED 1: g r b - white
  carrier.leds.setPixelColor(2, 20, 20, 178); //LED 2: g r b - blue
  carrier.leds.setPixelColor(3, 255, 255, 255); //LED 3: g r b - white
  carrier.leds.setPixelColor(4, 20, 20, 178); //LED 4: g r b - blue
  carrier.leds.show();
}

//Function to set the teams
void onDifferentTeamChange(){
  //Check value
  switch (different_team) {
    //If it is 0
    case 0:
      carrier.display.fillScreen(ST77XX_BLACK);  //Black background
      carrier.display.setTextColor(ST77XX_BLACK); //Black text
      message = "No team chosen"; //Message sent
      carrier.leds.fill(off); //No LEDs
      carrier.leds.show();
      break;
    //If it is 1
    case 1:
        message = "Paris Saint-Germain Selected"; //Message sent
        psg(); //Team function called
        break;
    //If it is 2
    case 2:
        message = "Manchester United Selected"; //Message sent
        man_u(); //Team function called
        break;
    //If it is 3
    case 3:
        message = "Athletico Paranaense Selected"; //Message sent
        athletico(); //Team function called
        break;
    //If it is 4
    case 4:
        message = "Internacional Selected"; //Message sent
        inter();  //Team function called
        break;
    //If it is 5
    case 5:
        message = "Al Hilal Selected"; //Message sent
        hilal();  //Team function called
        break;
      }
}

//Function to show Brazil
void brazil(){
  carrier.display.fillScreen(ST77XX_YELLOW); //Yellow background
  carrier.display.setTextColor(ST77XX_BLUE); //Blue text

  carrier.display.setTextSize(4); //Size
  carrier.display.setCursor(50, 40); //Cursor
  carrier.display.print("Brasil!"); //Display message

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(0, 90); //Cursor
  carrier.display.print("O Unico  5x Campeao Caralho!"); //Display message
  carrier.display.setCursor(0, 140); //Cursor
  carrier.display.setTextColor(ST77XX_GREEN); //Green text
  carrier.display.print("Capital: Forget it \nCuritiba is the best"); //Display message
  //Set LEDs
  carrier.leds.setPixelColor(0, 210, 232, 12); //g r b - yellow
  carrier.leds.setPixelColor(1, 0, 0, 200); //g r b - blue
  carrier.leds.setPixelColor(2, 200, 0, 0); //g r b - green
  carrier.leds.setPixelColor(3, 210, 232, 12); //g r b - yellow
  carrier.leds.setPixelColor(4, 200, 0, 0); //g r b - green
  carrier.leds.show();

  capital = Location(-25.430940, -49.269419);//Set map
}

//Function to show France
void france(){
  carrier.display.fillScreen(ST77XX_BLUE); //Blue background
  carrier.display.setTextColor(ST77XX_RED); //Red text

  carrier.display.setTextSize(3); //Size
  carrier.display.setCursor(50, 40); //Cursor
  carrier.display.print("France"); //Display message

  carrier.display.setTextColor(ST77XX_WHITE); //White text
  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(20, 120); //Cursor
  carrier.display.print("Capital: Paris");//Display message
  //Set LEDs
  carrier.leds.setPixelColor(0, 0, 0, 200); //g r b - blue -  blue
  carrier.leds.setPixelColor(1, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(2, 0, 200, 0); //g r b - red
  carrier.leds.setPixelColor(3, 0, 0, 200); //g r b - blue
  carrier.leds.setPixelColor(4, 255, 255, 255); //g r b - white
  carrier.leds.show();

  capital = Location(48.856613, 2.352222);//Set map
}

//Function to show England
void england(){
  carrier.display.fillScreen(ST77XX_WHITE); //White background
  carrier.display.setTextColor(ST77XX_RED); //Red text

  carrier.display.setTextSize(3); //Size
  carrier.display.setCursor(50, 40); //Cursor
  carrier.display.print("England"); //Display message

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(20, 120); //Cursor
  carrier.display.print("Capital: London"); //Display message
  //Set LEDs
  carrier.leds.setPixelColor(0, 0, 200, 0); //g r b - red
  carrier.leds.setPixelColor(1, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(2, 0, 200, 0); //g r b - red
  carrier.leds.setPixelColor(3, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(4, 0, 200, 0); //g r b - red
  carrier.leds.show();

  capital = Location(51.507351, -0.127758);//Set map
}

//Function to show USA
void usa(){
  carrier.display.fillScreen(ST77XX_WHITE); //White background
  carrier.display.setTextColor(ST77XX_RED); //Red text

  carrier.display.setTextSize(3);//Size
  carrier.display.setCursor(70, 40); //Cursor
  carrier.display.print("USA"); //Display message

  carrier.display.setTextColor(ST77XX_BLUE); //Blue text
  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(0, 120); //Cursor
  carrier.display.print("Capital: Washington D.C."); //Display message

  //Set LEDs
  carrier.leds.setPixelColor(0, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(1, 0, 200, 0); //g r b - red
  carrier.leds.setPixelColor(2, 0, 0, 255); //g r b - blue
  carrier.leds.setPixelColor(3, 0, 200, 0); //g r b - red
  carrier.leds.setPixelColor(4, 255, 255, 255); //g r b - white
  carrier.leds.show();

  capital = Location(38.907192, -77.036873);//Set map
}

//Function to show Saudi
void saudi(){
  carrier.display.fillScreen(ST77XX_GREEN); //Green background
  carrier.display.setTextColor(ST77XX_WHITE); //White text

  carrier.display.setTextSize(3); //Size
  carrier.display.setCursor(20, 40); //Cursor
  carrier.display.print("Saudi Arabia"); //Display message

  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(20, 120); //Cursor
  carrier.display.print("Capital: Riyadh"); //Display message
//Set LEDs
  carrier.leds.setPixelColor(0, 200, 0, 20); //g r b - green
  carrier.leds.setPixelColor(1, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(2, 200, 0, 20); //g r b - green
  carrier.leds.setPixelColor(3, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(4, 200, 0, 20); //g r b - green
  carrier.leds.show();

  capital = Location(24.638916, 46.7160104);//Set map
}

//Function to show Mexico
void mexico(){
  carrier.display.fillScreen(ST77XX_WHITE); //White background
  carrier.display.setTextColor(ST77XX_RED); //Red text

  carrier.display.setTextSize(3); //Size
  carrier.display.setCursor(50, 40); //Cursor
  carrier.display.print("Mexico"); //Display message

  carrier.display.setTextColor(ST77XX_GREEN); //Green text
  carrier.display.setTextSize(2); //Size
  carrier.display.setCursor(0, 120); //Cursor
  carrier.display.print("Capital: Ciudad de  Mexico"); //Display message
//Set LEDs
  carrier.leds.setPixelColor(0, 200, 0, 0); //g r b - green
  carrier.leds.setPixelColor(1, 255, 255, 255); //g r b - white
  carrier.leds.setPixelColor(2, 0, 200, 0); //g r b - red
  carrier.leds.setPixelColor(3, 200, 0, 0); //g r b - green
  carrier.leds.setPixelColor(4, 255, 255, 255); //g r b - white
  carrier.leds.show();

  capital = Location(19.4326296, -99.1331785);//Set map
}


//Functions to check countries
void onCountriesChange()  {

  //If value = 0
  if(countries == 0){
    carrier.display.fillScreen(ST77XX_BLACK); //Black background
    carrier.display.setTextColor(ST77XX_BLACK);//Black text
    carrier.leds.fill(off);
    carrier.leds.show();
  }
  //If value = 1
  else if(countries == 1){
      brazil(); //Brazil
  }

  //If value = 2
  else if(countries == 2){
      france(); //France
  }

  //If value = 3
  else if(countries == 3){
      england(); //England
  }

  //If value = 4
  else if(countries == 4){
      usa(); //USA
  }

  //If value = 5
  else if(countries == 5){
      saudi(); //Saudi
  }

  //If value = 6
  else if(countries == 6){
      mexico();  //Mexico
  }
}



/*
  Since Moving is READ_WRITE variable, onMovingChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMovingChange()  {
  // Add your code here to act upon Moving change
}
